<main>
  <section class="section sec4" id="blogs">
    <!-- 放筆記 -->
    <div class="blogs-content">
      <div class="main-title">
        <h2>My <span>Notes</span></h2>
      </div>
      <div class="blogs">
        <div class="blog">
          <img src="/img/snow_boy.jpg" alt="">
          <div class="blog-text">
            <a href="https://github.com/raindropcity/myprofile" target="_blank">
              Notes: My Profile
            </a>
            <p class="En-language">
              Software engineers explore the world without paper and pens. In the situation that needs to introduce the
              self-experience, it absolutely has to be in a cool way. Then I got rid of the paperwork and tried to build
              a website
              displaying myself. This project takes the advantage of MacLinz's online course
              . I learned many frontend skills built by SCSS, HTML, CSS & JS and didn't take
              the help of Bootstrap intentionally while constructing my own site. Of course, I tried to change some
              codes to make this
              site connect to the database MongoDB and run properly in Node.js
            </p>
            <p class="Ch-language">
              該如何像一個前端軟體工程師一樣的自我介紹? 我想製作一個展現自己的網站看起來是個不錯的想法。<br>
              My
              Profile 這個專案是參考線上資源 MacLinz 的教學而完成，整個過程我最大的收穫在於首次學習以 SCSS 加速傳統 CSS 樣式編寫，以及響應式網頁的樣式設定，並刻意練習不採用 Bootstrap
              的現成樣式，完整訓練自己手刻畫面的能力。
            </p>
          </div>
        </div>
        <div class="blog">
          <img src="/img/todolist_react_2.png" alt="">
          <div class="blog-text">
            <a href="https://github.com/raindropcity/todolist_react" target="_blank">
              Notes: Todo List - React
            </a>
            <p class="En-language">
              I had practiced building a Todolist by template engine "handlebar".That was a great beginning for learning
              the concept of RESTful and route. However, I found every function should have a
              specific route was inconvenient. Meanwhile, I realized learning one of the popular frontend frameworks is
              an imperative
              trend.<br>
              I started rebuilding a Todolist by getting advantage of React. During the process, I learned to use Hook,
              set the API to
              connect the frontend & the backend, and make the rerender to get the application to execute more
              smoother.
            </p>
            <p class="Ch-language">
              為了強化 RESTful 與路由觀念，我先前主要以樣板引擎 Handlebar 為前端基礎，練習製作 Todolist。<br>
              後來我發覺每個功能都需要搭配一個路由有些不便，同時也在瀏覽學習資料時，了解到現今的前端工程，掌握至少其中一個前端框架可謂勢在必行，因此我決定重新以 React 為前端基礎，再次製作
              Todolist。<br>
              期間，我學習使用 Hook、編寫 API，以及練習適應React 的 re-render技術，讓前端執行更組件化與流暢。當然，也融合先前所學，這是一個 MERN stack 的小專案!
            </p>
          </div>
        </div>
        <div class="blog">
          <img src="/img/react_picture.png" alt="">
          <div class="blog-text">
            <a href="https://github.com/raindropcity/learn_react" target="_blank">
              Notes: Learn React
            </a>
            <p class="En-language">
              After learning the fundamental of JS, HTML, CSS, Node.js, Express, and MongoDB, I started thinking about :
              maybe I could
              try coding as my job. The main reason is I learned to code for about 1 year, and I never had any mind
              about quitting.
              That was weird!
              Then I browsed some jobs for software engineers and realized I should capture at least one framework of JS
              to be more
              hirable. I chose React.js because it is popular and will be the last puzzle to accomplish the MERN stack!
            </p>
            <p class="Ch-language">
              這個小專案是一個用來練習 React 而製作的餐廳清單。<br>
              自行透過網路資源學習程式語言後，漸漸掌握一些JS、HTML、CSS、Node.js、Express、MongoDB的觀念與技巧，我開始想像，也許我可以成為一名軟體工程師。<br>
              主要的原因並不是我認為自己已經具備足夠的專業知識或技術，而是我在業餘時間自己摸索這個領域一年多了，心裡從來沒有想過放棄!<br>
              瀏覽過一些就業條件後，我了解到現今入門前端工程師必須掌握至少一種前端框架，才具有基礎的競爭力。我選擇了 React ，因為它在業界廣泛運用，並且是我完成 MERN 開發模式的最後一塊拼圖。
            </p>
          </div>
        </div>
        <div class="blog">
          <img src="/img/todo_list.jpg" alt="">
          <div class="blog-text">
            <a href="https://github.com/raindropcity/Todo-List" target="_blank">
              Notes: Todo List
            </a>
            <p class="En-language">
              Todo list is a classic project to practice the concept of RESTful, building routes, and operating the
              database. I spent
              much time learning the skills while coding. The main acquisition I got is how to save some time by using
              Node.js and
              modules provided in npm; using middlewares in Express set the routes by CRUD semantically. Last but not
              least, operating
              MongoDB by the methods in Mongoose spurred me to learn the concept of Promise in JS.
            </p>
            <p class="Ch-language">
              Todolist 是學習前端工程的經典習作專案。我透過練習此專案，學習以樣板引擎 Handlebar 為前端基礎、利用Express配合 RESTful 概念進行路由設計、操作並連接 MongoDB 資料庫、認識
              npm
              中許多開源模組的引用，也是我首次認識 Node.js，以自己的電腦為開發環境，進行專案開發，雖然微小，但卻是我的第一步。
            </p>
          </div>
        </div>
      </div>
      {{!-- modal --}}
      {{!-- <div class="modal">
        <div class="modal-content">
          <p class="modal-text">

          </p>
        </div>
      </div> --}}
    </div>
  </section>
</main>

<!-- 右側fixed button -->
<div class="controlls">
  <a href="/myprofile" class="control control-1" data-id="home">
    <i class="fas fa-home"></i>
  </a>
  <a href="/myprofile/aboutme" class="control control-2" data-id="about">
    <i class="fas fa-user"></i>
  </a>
  <a href="/myprofile/portfolio" class="control control-3" data-id="portfolio">
    <i class="fas fa-briefcase"></i>
  </a>
  <a href="/myprofile/notes" class="control control-4  active-btn" data-id="blogs">
    <i class="far fa-newspaper"></i>
  </a>
  <a href="/myprofile/contactme" class="control control-5" data-id="contact">
    <i class="fas fa-envelope-open"></i>
  </a>
</div>